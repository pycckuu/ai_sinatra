<link rel="stylesheet" href="styles.css" type="text/css" />

<h3> Load the Data and Plot data distribuition </h3> <p>

<img src="<%= 'violins.png' %>" />

<p> The data is skewed to the "lower" end from the mean.

<h3> Check data for correlation </h3>

<img src="<%= 'correlations.png' %>" />

<p> There is no drastic correlations (>90) between the columns. So nothing to reduce here. <p>

<h3> Figure shows different models performance: </h3>
<p>

<img src="<%= 'models_perform.png' %>" />
<p> As expected, regression models perform better than classification ones on this dataset.
<p> The ensebmle of top 5 models (OrthogonalMatchingPursuitCV, LinearRegression, Lars, Ridge, and BayesianRidge) were taken to predict the amount of bags: <p>
<img src="<%= 'ensemble.png' %>" />

<p> <h3> The resultsing metrics of the Ensemble: </h3>
<p> Mean squared error : 0.907
<p> r2 score : 0.754
<p> Median absolute error : 0.603
<p> Explained variance score : 0.754
<p> Bias : -0.224


<p>

<h3> One to one plot (you can move, zoom in/out etc.): </h3>

<%= erb :model_perform %>


<p>
<p>
For details about learning procedure, please, refer to the page describing the steps taken:

<a href="/steps_taken.html">click here</a>



<p>
In general, all algorithms underestimate the prediction of bags in the midrange values. It would be required to pick the algorithms separately and tune the parameters for the best results. Also, it is possible to introduce the "smooth correction function" to adjust overpredicted values below "3" and underpredicted values of bags above "3".


<h3> Summary table of the model performance: <p></h3>








<table class="pretty table">
  <thead>
    <tr>
      <th> name </th>
      <th> explained variance </th>
      <th> mean squared error </th>
      <th> median absolute error </th>
      <th> bias </th>
      <th> r-squared </th>
      <th> model score </th>
    </tr>
  </thead>
  <tbody>
  <% @model_res.each do |m| %>
  <tr>
    <td><%= m[:model] %></td>
    <td><%= m[:explained_variance_score].to_s[0..4] %></td>
    <td><%= m[:mean_squared_error].to_s[0..4] %></td>
    <td><%= m[:median_absolute_error].to_s[0..4] %></td>
    <td><%= m[:pc_bias].to_s[0..4] %></td>
    <td><%= m[:r2_score].to_s[0..4] %></td>
    <td><%= m[:score].to_s[0..4] %></td>
  </tr>
  <% end %>
  </tbody>
</table>



